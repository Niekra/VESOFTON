/*
 * Userinterface.cpp
 *
 *  Created on: May 20, 2018
 *      Author: M
 */

#include <Userinterface.h>
//#include <Dma_usart.h>
/* Include core modules */
#include "stm32f4xx.h"
#include "tm_stm32f4_usart.h"
#include "tm_stm32f4_usart_dma.h"

#include "string.h"

/* Create USART working buffer */
char USART_Buffer[100] = "Hello via USART2 with TX DMA\n";


Userinterface::Userinterface() {
	// TODO Auto-generated constructor stub
	LL = LogicLayer();
	//IO = InputOutput();
	err = 0;
	//clock_Init();

    /* Init USART2 on pins TX = PA2, RX = PA3 */
    /* This pins are used on Nucleo boards for USB to UART via ST-Link */
    TM_USART_Init(USART2, TM_USART_PinsPack_1, 115200);

    /* Init TX DMA for USART2 */
    TM_USART_DMA_Init(USART2);

    /* Say string without DMA */
    TM_USART_Puts(USART2, "Hello via USART2 without DMA\n");

    /* Send data with DMA */
    TM_USART_DMA_Send(USART2, (uint8_t *)USART_Buffer, strlen(USART_Buffer));

    /* Wait till DMA works */
    /* You can do other stuff here instead of waiting for DMA to end */
    while (TM_USART_DMA_Sending(USART2));
}

Userinterface::~Userinterface() {
	// TODO Auto-generated destructor stub
}

void Userinterface::mainLoop(){
	int buffered;
	LL.waitMs(5000);
	LL.setCommand("lijn,10,100,200,220,4,blauw");
	LL.waitMs(1000);
	LL.setCommand("clearscherm,groen");
	LL.waitMs(1000);
	LL.setCommand("driehoek,150,60,101,101,201,101,lichtblauw");

	//char test[] = "hallo";
	while(err==0){
		//test();
		//IO.write(test);

		 if (TM_USART_Gets(USART2, USART_Buffer, sizeof(USART_Buffer))) {
			/* Send it back over DMA */
			TM_USART_DMA_Send(USART2, (uint8_t *)USART_Buffer, strlen(USART_Buffer));

			/* Wait till DMA works */
			/* You can do other stuff here instead of waiting for DMA to end */
			while (TM_USART_DMA_Sending(USART2));
		}


		/*
		buffered = IO.read(buf);

		if(buffered == 0){
			LL.setCommand(buf);
		}
		LL.waitMs(10000);
		*/
	}
}

void Userinterface::write_error(int){

}
