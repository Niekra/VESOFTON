/** @file Vgascreen.h
 *  @brief Function prototypes for drawing shapes and text on VGA screen.
 *
 *	@author Matthijs Daggelders
 *  @author Niek Ratering Arntz
 */

#ifndef VGASCREEN_H_
#define VGASCREEN_H_

const int smileyBmp[1025] =
{ 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 182, 109, 36, 0, 0, 0,
		0, 36, 109, 182, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 219, 109, 0, 0, 0, 36, 73, 109,
		109, 73, 36, 0, 0, 0, 109, 219, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 109, 0, 0, 73, 182, 255, 255, 255,
		255, 255, 255, 255, 255, 182, 73, 0, 0, 109, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 219, 36, 0, 73, 219, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 219, 73, 0, 36, 219, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 219, 0, 0, 146, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 146, 0,
		0, 219, 255, 255, 255, 255, 255, 255, 255, 219, 0, 0, 219, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 219, 0, 0, 219, 255, 255, 255, 255, 255, 255, 36, 0, 219, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 219, 0, 36, 255, 255, 255, 255, 255, 109, 0,
		146, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 146, 0, 109, 255, 255, 255,
		219, 0, 73, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 73, 0, 219,
		255, 255, 109, 0, 219, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		219, 0, 109, 255, 255, 0, 73, 255, 255, 255, 255, 255, 255, 255, 146,
		109, 255, 255, 255, 255, 255, 255, 255, 255, 109, 146, 255, 255, 255,
		255, 255, 255, 255, 73, 0, 255, 182, 0, 182, 255, 255, 255, 255, 255,
		255, 182, 0, 0, 73, 255, 255, 255, 255, 255, 255, 73, 0, 0, 182, 255,
		255, 255, 255, 255, 255, 182, 0, 182, 109, 0, 255, 255, 255, 255, 255,
		255, 255, 182, 0, 0, 73, 255, 255, 255, 255, 255, 255, 73, 0, 0, 182,
		255, 255, 255, 255, 255, 255, 255, 0, 109, 36, 36, 255, 255, 255, 255,
		255, 255, 255, 255, 146, 109, 255, 255, 255, 255, 255, 255, 255, 255,
		109, 146, 255, 255, 255, 255, 255, 255, 255, 255, 36, 36, 0, 73, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 73, 0,
		0, 109, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 109, 0, 0, 109, 255, 255, 255, 219, 0, 0, 219, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 219, 0, 0, 219, 255,
		255, 255, 109, 0, 0, 73, 255, 255, 255, 219, 0, 0, 182, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 182, 0, 0, 219,
		255, 255, 255, 73, 0, 36, 36, 255, 255, 255, 255, 0, 0, 109, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 109, 0, 0,
		255, 255, 255, 255, 36, 36, 109, 0, 255, 255, 255, 255, 109, 0, 0, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0,
		109, 255, 255, 255, 255, 0, 109, 182, 0, 182, 255, 255, 255, 219, 0, 0,
		109, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 109, 0,
		0, 219, 255, 255, 255, 182, 0, 182, 255, 0, 73, 255, 255, 255, 255, 73,
		0, 0, 146, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 146, 0, 0,
		73, 255, 255, 255, 255, 73, 0, 255, 255, 109, 0, 219, 255, 255, 255,
		255, 36, 0, 0, 109, 255, 255, 255, 255, 255, 255, 255, 255, 109, 0, 0,
		36, 255, 255, 255, 255, 219, 0, 109, 255, 255, 219, 0, 73, 255, 255,
		255, 255, 255, 36, 0, 0, 0, 109, 182, 219, 219, 182, 109, 0, 0, 0, 36,
		255, 255, 255, 255, 255, 73, 0, 219, 255, 255, 255, 109, 0, 146, 255,
		255, 255, 255, 255, 109, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 109, 255, 255,
		255, 255, 255, 146, 0, 109, 255, 255, 255, 255, 255, 36, 0, 219, 255,
		255, 255, 255, 255, 219, 109, 0, 0, 0, 0, 0, 0, 109, 219, 255, 255, 255,
		255, 255, 219, 0, 36, 255, 255, 255, 255, 255, 255, 219, 0, 0, 219, 255,
		255, 255, 255, 255, 255, 255, 255, 219, 219, 255, 255, 255, 255, 255,
		255, 255, 255, 219, 0, 0, 219, 255, 255, 255, 255, 255, 255, 255, 219,
		0, 0, 146, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 146, 0, 0, 219, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 219, 36, 0, 73, 219, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 219, 73, 0, 36, 219, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 109, 0, 0, 73, 182, 255, 255, 255, 255,
		255, 255, 255, 255, 182, 73, 0, 0, 109, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 219, 109, 0, 0, 0, 36, 73,
		109, 109, 73, 36, 0, 0, 0, 109, 219, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 182, 109,
		36, 0, 0, 0, 0, 36, 109, 182, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255 };

const int angryBmp[1025] =
{ 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 219,
		182, 182, 219, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 182,
		73, 0, 0, 0, 0, 0, 0, 0, 0, 73, 182, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 182, 36, 0, 36,
		109, 182, 219, 255, 255, 219, 182, 109, 36, 0, 36, 182, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 73, 0, 73,
		219, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 219, 73, 0, 73,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 219, 0, 0,
		182, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 182, 0, 0, 219, 255, 255, 255, 255, 255, 255, 255, 255, 255, 219,
		0, 36, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 36, 0, 219, 255, 255, 255, 255, 255, 255, 255,
		255, 0, 36, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 36, 0, 255, 255, 255, 255, 255,
		255, 255, 73, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 73, 255, 255,
		255, 255, 255, 182, 0, 182, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 182, 0,
		182, 255, 255, 255, 255, 36, 73, 255, 255, 255, 255, 109, 182, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 146, 146, 255, 255,
		255, 255, 73, 36, 255, 255, 255, 182, 0, 219, 255, 255, 255, 255, 109,
		0, 0, 109, 219, 255, 255, 255, 255, 255, 255, 182, 73, 0, 0, 146, 255,
		255, 255, 255, 219, 0, 182, 255, 255, 73, 36, 255, 255, 255, 255, 255,
		255, 255, 73, 36, 36, 255, 255, 255, 255, 255, 255, 0, 36, 73, 255, 255,
		255, 255, 255, 255, 255, 36, 73, 255, 255, 0, 109, 255, 255, 255, 255,
		255, 255, 73, 0, 73, 255, 255, 255, 255, 255, 255, 255, 255, 36, 0, 146,
		255, 255, 255, 255, 255, 255, 109, 0, 255, 255, 0, 182, 255, 255, 255,
		255, 255, 255, 109, 0, 109, 255, 255, 255, 255, 255, 255, 255, 255, 36,
		0, 146, 255, 255, 255, 255, 255, 255, 182, 0, 255, 219, 0, 219, 255,
		255, 255, 255, 255, 255, 255, 219, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 219, 255, 255, 255, 255, 255, 255, 255, 219, 0, 219, 182,
		0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0,
		182, 182, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 0, 182, 219, 0, 219, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 219, 146, 109, 109, 146, 219, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 219, 0, 219, 255, 0, 182, 255, 255, 255, 255, 255,
		255, 255, 255, 182, 36, 0, 0, 0, 0, 0, 0, 36, 182, 255, 255, 255, 255,
		255, 255, 255, 255, 182, 0, 255, 255, 0, 109, 255, 255, 255, 255, 255,
		255, 255, 109, 0, 36, 146, 219, 219, 219, 219, 146, 36, 0, 109, 255,
		255, 255, 255, 255, 255, 255, 109, 0, 255, 255, 73, 36, 255, 255, 255,
		255, 255, 255, 219, 0, 182, 255, 255, 255, 255, 255, 255, 255, 255, 182,
		0, 219, 255, 255, 255, 255, 255, 255, 36, 73, 255, 255, 182, 0, 219,
		255, 255, 255, 255, 255, 255, 219, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 219, 255, 255, 255, 255, 255, 255, 219, 0, 182, 255, 255,
		255, 36, 73, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 73, 36, 255,
		255, 255, 255, 182, 0, 182, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 182, 0,
		182, 255, 255, 255, 255, 255, 73, 0, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 0, 73, 255, 255, 255, 255, 255, 255, 255, 0, 36, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 36, 0, 255, 255, 255, 255, 255, 255, 255, 255, 219, 0,
		36, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 36, 0, 219, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 219, 0, 0, 182, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 182, 0, 0, 219, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 73, 0, 73, 219, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 219, 73, 0, 73, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 182, 36, 0, 36, 109, 182,
		219, 255, 255, 219, 182, 109, 36, 0, 36, 182, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 182,
		73, 0, 0, 0, 0, 0, 0, 0, 0, 73, 182, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 219, 182, 182, 219, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255 };

const int arrowUp[1025] =
{ 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 36, 182, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 146, 0, 0, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 219, 0, 0, 0, 109, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 73, 0, 0, 0,
		0, 182, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 146, 0, 0,
		0, 0, 0, 36, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0,
		0, 0, 0, 0, 0, 109, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 73, 0,
		0, 0, 0, 0, 0, 0, 0, 219, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 182, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 36, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 146, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 109, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 219, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 182, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 36, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		146, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 109, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 219, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 73, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 36, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 182, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 146,
		146, 146, 146, 146, 109, 0, 0, 0, 0, 0, 0, 0, 0, 0, 36, 146, 146, 146,
		146, 146, 219, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 109, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 109, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 109, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 109, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 109, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 109, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 109, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 109, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 109, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 109, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 109, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 109, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 109, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 109, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255 };

const int arrowDown[1025] =
{ 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 109, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 109, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 109, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 109, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 109, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 109, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 109, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 109, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 109, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 109, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 109, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 109, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 109, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 109, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 219, 146, 146, 146, 146, 146, 36, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 109, 146, 146, 146, 146, 146, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 146, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		182, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 36, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 73, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 219, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 109, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 36, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 219, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 109, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 182, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 219, 0, 0, 0, 0, 0, 0, 0, 0, 73, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 109, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 36, 0, 0, 0, 0, 0, 146, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 182, 0, 0, 0, 0, 73, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 109, 0, 0, 0,
		219, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 0, 0, 146, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 182, 36, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255 };

const int arrowRight[1025] =
{ 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 146, 146, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 146, 0, 36, 219, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 146, 0, 0,
		0, 109, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		146, 0, 0, 0, 0, 36, 182, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 146, 0, 0, 0, 0, 0, 0, 109, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 109, 0, 0, 0, 0, 0, 0, 0, 0, 182, 255, 255, 255, 255,
		255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 73, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 146,
		255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 73, 219, 255, 255, 255, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		146, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 36, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 182, 255, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 109, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 36, 182, 255, 255, 255, 255, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		109, 255, 255, 255, 255, 255, 255, 109, 109, 109, 109, 109, 109, 109,
		109, 109, 109, 109, 109, 109, 109, 36, 0, 0, 0, 0, 0, 0, 0, 0, 36, 219,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 146, 0, 0, 0, 0, 0, 0, 0, 146, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 146, 0, 0, 0, 0, 0, 36, 219,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 146, 0, 0, 0, 0, 146,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 146, 0, 0,
		73, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 146, 0, 182, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 219, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255 };

const int arrowLeft[1025] =
{ 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 219, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 182, 0, 146, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 73, 0, 0,
		146, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 146, 0,
		0, 0, 0, 146, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 219,
		36, 0, 0, 0, 0, 0, 146, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		146, 0, 0, 0, 0, 0, 0, 0, 146, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 219,
		36, 0, 0, 0, 0, 0, 0, 0, 0, 36, 109, 109, 109, 109, 109, 109, 109, 109,
		109, 109, 109, 109, 109, 109, 255, 255, 255, 255, 255, 255, 109, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		255, 255, 255, 255, 182, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 109, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		255, 182, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 146, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 255, 255, 255, 219, 73, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255,
		146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 73, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255,
		255, 255, 255, 255, 182, 0, 0, 0, 0, 0, 0, 0, 0, 109, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 109, 0, 0, 0, 0, 0, 0, 146, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 182, 36, 0, 0, 0, 0, 146,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 109, 0,
		0, 0, 146, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 219, 36, 0, 146, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 146, 146, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
		255 };

const unsigned char font1[96][7] =
{
		{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, //
		{ 0x5e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, // !
		{ 0x0c, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00 }, // "
		{ 0x14, 0x3e, 0x14, 0x3e, 0x14, 0x00, 0x00 }, // #
		{ 0x2e, 0x2a, 0x7f, 0x2a, 0x3a, 0x00, 0x00 }, // $
		{ 0x1c, 0x14, 0x1c, 0x00, 0x7c, 0x00, 0x70 }, // %
		{ 0x78, 0x4e, 0x5a, 0x2e, 0x40, 0x00, 0x00 }, // &
		{ 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, // '
		{ 0x7e, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00 }, // (
		{ 0x81, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00 }, // )
		{ 0x04, 0x1c, 0x0e, 0x1c, 0x04, 0x00, 0x00 }, // *
		{ 0x08, 0x1c, 0x08, 0x00, 0x00, 0x00, 0x00 }, // +
		{ 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, // ,
		{ 0x08, 0x08, 0x08, 0x00, 0x00, 0x00, 0x00 }, // -
		{ 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, // .
		{ 0x70, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00 }, // /
		{ 0x7c, 0x44, 0x7c, 0x00, 0x00, 0x00, 0x00 }, // 0
		{ 0x08, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00 }, // 1
		{ 0x64, 0x54, 0x4c, 0x00, 0x00, 0x00, 0x00 }, // 2
		{ 0x44, 0x54, 0x7c, 0x00, 0x00, 0x00, 0x00 }, // 3
		{ 0x1c, 0x10, 0x7c, 0x00, 0x00, 0x00, 0x00 }, // 4
		{ 0x5c, 0x54, 0x34, 0x00, 0x00, 0x00, 0x00 }, // 5
		{ 0x7c, 0x54, 0x74, 0x00, 0x00, 0x00, 0x00 }, // 6
		{ 0x04, 0x04, 0x7c, 0x00, 0x00, 0x00, 0x00 }, // 7
		{ 0x7c, 0x54, 0x7c, 0x00, 0x00, 0x00, 0x00 }, // 8
		{ 0x1c, 0x14, 0x7c, 0x00, 0x00, 0x00, 0x00 }, // 9
		{ 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, // :
		{ 0xd0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, // ;
		{ 0x20, 0x50, 0x50, 0x00, 0x00, 0x00, 0x00 }, // <
		{ 0x28, 0x28, 0x28, 0x00, 0x00, 0x00, 0x00 }, // =
		{ 0x50, 0x50, 0x20, 0x00, 0x00, 0x00, 0x00 }, // >
		{ 0x02, 0x5a, 0x0e, 0x00, 0x00, 0x00, 0x00 }, // ?
		{ 0x7e, 0x42, 0x5a, 0x5a, 0x52, 0x5e, 0x00 }, // @
		{ 0x7e, 0x0a, 0x0a, 0x7e, 0x00, 0x00, 0x00 }, // A
		{ 0x7e, 0x4a, 0x4a, 0x7c, 0x00, 0x00, 0x00 }, // B
		{ 0x7e, 0x42, 0x42, 0x42, 0x00, 0x00, 0x00 }, // C
		{ 0x7e, 0x42, 0x42, 0x7c, 0x00, 0x00, 0x00 }, // D
		{ 0x7e, 0x4a, 0x4a, 0x42, 0x00, 0x00, 0x00 }, // E
		{ 0x7e, 0x0a, 0x0a, 0x02, 0x00, 0x00, 0x00 }, // F
		{ 0x7e, 0x42, 0x4a, 0x7a, 0x00, 0x00, 0x00 }, // G
		{ 0x7e, 0x08, 0x08, 0x7e, 0x00, 0x00, 0x00 }, // H
		{ 0x42, 0x42, 0x7e, 0x42, 0x42, 0x00, 0x00 }, // I
		{ 0x42, 0x42, 0x7e, 0x02, 0x00, 0x00, 0x00 }, // J
		{ 0x7e, 0x08, 0x0e, 0x78, 0x00, 0x00, 0x00 }, // K
		{ 0x7e, 0x40, 0x40, 0x40, 0x00, 0x00, 0x00 }, // L
		{ 0x7e, 0x02, 0x06, 0x02, 0x7e, 0x00, 0x00 }, // M
		{ 0x7e, 0x04, 0x08, 0x7e, 0x00, 0x00, 0x00 }, // N
		{ 0x7e, 0x42, 0x42, 0x7e, 0x00, 0x00, 0x00 }, // O
		{ 0x7e, 0x0a, 0x0a, 0x0e, 0x00, 0x00, 0x00 }, // P
		{ 0x7e, 0x42, 0xc2, 0x7e, 0x00, 0x00, 0x00 }, // Q
		{ 0x7e, 0x0a, 0x7a, 0x0e, 0x00, 0x00, 0x00 }, // R
		{ 0x4e, 0x4a, 0x4a, 0x7a, 0x00, 0x00, 0x00 }, // S
		{ 0x02, 0x02, 0x7e, 0x02, 0x02, 0x00, 0x00 }, // T
		{ 0x7e, 0x40, 0x40, 0x7e, 0x00, 0x00, 0x00 }, // U
		{ 0x1e, 0x20, 0x40, 0x20, 0x1e, 0x00, 0x00 }, // V
		{ 0x7e, 0x40, 0x60, 0x40, 0x7e, 0x00, 0x00 }, // W
		{ 0x42, 0x24, 0x18, 0x24, 0x42, 0x00, 0x00 }, // X
		{ 0x0e, 0x08, 0x78, 0x08, 0x0e, 0x00, 0x00 }, // Y
		{ 0x62, 0x52, 0x4a, 0x46, 0x00, 0x00, 0x00 }, // Z
		{ 0xff, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00 }, // [
		{ 0x0e, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00 }, // "\"
		{ 0x81, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00 }, // ]
		{ 0x04, 0x02, 0x04, 0x00, 0x00, 0x00, 0x00 }, // ^
		{ 0x40, 0x40, 0x40, 0x40, 0x40, 0x00, 0x00 }, // _
		{ 0x02, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00 }, // `
		{ 0x7c, 0x14, 0x14, 0x7c, 0x00, 0x00, 0x00 }, // a
		{ 0x7c, 0x54, 0x54, 0x78, 0x00, 0x00, 0x00 }, // b
		{ 0x7c, 0x44, 0x44, 0x44, 0x00, 0x00, 0x00 }, // c
		{ 0x7c, 0x44, 0x44, 0x78, 0x00, 0x00, 0x00 }, // d
		{ 0x7c, 0x54, 0x54, 0x44, 0x00, 0x00, 0x00 }, // e
		{ 0x7c, 0x14, 0x14, 0x04, 0x00, 0x00, 0x00 }, // f
		{ 0x7c, 0x44, 0x54, 0x74, 0x00, 0x00, 0x00 }, // g
		{ 0x7c, 0x10, 0x10, 0x7c, 0x00, 0x00, 0x00 }, // h
		{ 0x44, 0x44, 0x7c, 0x44, 0x44, 0x00, 0x00 }, // i
		{ 0x44, 0x44, 0x7c, 0x04, 0x00, 0x00, 0x00 }, // j
		{ 0x7c, 0x10, 0x1c, 0x70, 0x00, 0x00, 0x00 }, // k
		{ 0x7c, 0x40, 0x40, 0x40, 0x00, 0x00, 0x00 }, // l
		{ 0x7c, 0x04, 0x0c, 0x04, 0x7c, 0x00, 0x00 }, // m
		{ 0x7c, 0x08, 0x10, 0x7c, 0x00, 0x00, 0x00 }, // n
		{ 0x7c, 0x44, 0x44, 0x7c, 0x00, 0x00, 0x00 }, // o
		{ 0x7c, 0x14, 0x14, 0x1c, 0x00, 0x00, 0x00 }, // p
		{ 0x7c, 0x44, 0xc4, 0x7c, 0x00, 0x00, 0x00 }, // q
		{ 0x7c, 0x14, 0x74, 0x1c, 0x00, 0x00, 0x00 }, // r
		{ 0x5c, 0x54, 0x54, 0x74, 0x00, 0x00, 0x00 }, // s
		{ 0x04, 0x04, 0x7c, 0x04, 0x04, 0x00, 0x00 }, // t
		{ 0x7c, 0x40, 0x40, 0x7c, 0x00, 0x00, 0x00 }, // u
		{ 0x1c, 0x20, 0x40, 0x20, 0x1c, 0x00, 0x00 }, // v
		{ 0x7c, 0x40, 0x60, 0x40, 0x7c, 0x00, 0x00 }, // w
		{ 0x44, 0x28, 0x10, 0x28, 0x44, 0x00, 0x00 }, // x
		{ 0x1c, 0x10, 0x70, 0x10, 0x1c, 0x00, 0x00 }, // y
		{ 0x64, 0x54, 0x4c, 0x44, 0x00, 0x00, 0x00 }, // z
		{ 0x08, 0xf7, 0x81, 0x00, 0x00, 0x00, 0x00 }, // {
		{ 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, // |
		{ 0x81, 0xf7, 0x08, 0x00, 0x00, 0x00, 0x00 }, // }
		{ 0x18, 0x08, 0x10, 0x18, 0x00, 0x00, 0x00 }, // ~
		{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } };

const unsigned char font2[96][6] =
{
		{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, //
		{ 0x2f, 0x00, 0x00, 0x00, 0x00, 0x00 }, // !
		{ 0x03, 0x00, 0x03, 0x00, 0x00, 0x00 }, // "
		{ 0x12, 0x3f, 0x12, 0x12, 0x3f, 0x12 }, // #
		{ 0x2e, 0x2a, 0x7f, 0x2a, 0x3a, 0x00 }, // $
		{ 0x23, 0x13, 0x08, 0x04, 0x32, 0x31 }, // %
		{ 0x10, 0x2a, 0x25, 0x2a, 0x10, 0x20 }, // &
		{ 0x02, 0x01, 0x00, 0x00, 0x00, 0x00 }, // '
		{ 0x1e, 0x21, 0x00, 0x00, 0x00, 0x00 }, // (
		{ 0x21, 0x1e, 0x00, 0x00, 0x00, 0x00 }, // )
		{ 0x08, 0x2a, 0x1c, 0x2a, 0x08, 0x08 }, // *
		{ 0x08, 0x08, 0x3e, 0x08, 0x08, 0x08 }, // +
		{ 0x80, 0x60, 0x00, 0x00, 0x00, 0x00 }, // ,
		{ 0x08, 0x08, 0x08, 0x08, 0x08, 0x00 }, // -
		{ 0x30, 0x30, 0x00, 0x00, 0x00, 0x00 }, // .
		{ 0x20, 0x10, 0x08, 0x04, 0x02, 0x00 }, // /
		{ 0x1e, 0x31, 0x29, 0x25, 0x23, 0x1e }, // 0
		{ 0x22, 0x21, 0x3f, 0x20, 0x20, 0x20 }, // 1
		{ 0x32, 0x29, 0x29, 0x29, 0x29, 0x26 }, // 2
		{ 0x12, 0x21, 0x21, 0x25, 0x25, 0x1a }, // 3
		{ 0x18, 0x14, 0x12, 0x3f, 0x10, 0x10 }, // 4
		{ 0x17, 0x25, 0x25, 0x25, 0x25, 0x19 }, // 5
		{ 0x1e, 0x25, 0x25, 0x25, 0x25, 0x18 }, // 6
		{ 0x01, 0x01, 0x31, 0x09, 0x05, 0x03 }, // 7
		{ 0x1a, 0x25, 0x25, 0x25, 0x25, 0x1a }, // 8
		{ 0x06, 0x29, 0x29, 0x29, 0x29, 0x1e }, // 9
		{ 0x24, 0x00, 0x00, 0x00, 0x00, 0x00 }, // :
		{ 0x80, 0x64, 0x00, 0x00, 0x00, 0x00 }, // ;
		{ 0x08, 0x14, 0x22, 0x00, 0x00, 0x00 }, // <
		{ 0x14, 0x14, 0x14, 0x14, 0x14, 0x00 }, // =
		{ 0x22, 0x14, 0x08, 0x00, 0x00, 0x00 }, // >
		{ 0x02, 0x01, 0x01, 0x29, 0x05, 0x02 }, // ?
		{ 0x1e, 0x21, 0x2d, 0x2b, 0x2d, 0x0e }, // @
		{ 0x3e, 0x09, 0x09, 0x09, 0x09, 0x3e }, // A
		{ 0x3f, 0x25, 0x25, 0x25, 0x25, 0x1a }, // B
		{ 0x1e, 0x21, 0x21, 0x21, 0x21, 0x12 }, // C
		{ 0x3f, 0x21, 0x21, 0x21, 0x12, 0x0c }, // D
		{ 0x3f, 0x25, 0x25, 0x25, 0x25, 0x21 }, // E
		{ 0x3f, 0x05, 0x05, 0x05, 0x05, 0x01 }, // F
		{ 0x1e, 0x21, 0x21, 0x21, 0x29, 0x1a }, // G
		{ 0x3f, 0x04, 0x04, 0x04, 0x04, 0x3f }, // H
		{ 0x21, 0x21, 0x3f, 0x21, 0x21, 0x21 }, // I
		{ 0x10, 0x20, 0x20, 0x20, 0x20, 0x1f }, // J
		{ 0x3f, 0x04, 0x0c, 0x0a, 0x11, 0x20 }, // K
		{ 0x3f, 0x20, 0x20, 0x20, 0x20, 0x20 }, // L
		{ 0x3f, 0x02, 0x04, 0x04, 0x02, 0x3f }, // M
		{ 0x3f, 0x02, 0x04, 0x08, 0x10, 0x3f }, // N
		{ 0x1e, 0x21, 0x21, 0x21, 0x21, 0x1e }, // O
		{ 0x3f, 0x09, 0x09, 0x09, 0x09, 0x06 }, // P
		{ 0x1e, 0x21, 0x29, 0x31, 0x21, 0x1e }, // Q
		{ 0x3f, 0x09, 0x09, 0x09, 0x19, 0x26 }, // R
		{ 0x12, 0x25, 0x25, 0x25, 0x25, 0x18 }, // S
		{ 0x01, 0x01, 0x01, 0x3f, 0x01, 0x01 }, // T
		{ 0x1f, 0x20, 0x20, 0x20, 0x20, 0x1f }, // U
		{ 0x0f, 0x10, 0x20, 0x20, 0x10, 0x0f }, // V
		{ 0x1f, 0x20, 0x10, 0x10, 0x20, 0x1f }, // W
		{ 0x21, 0x12, 0x0c, 0x0c, 0x12, 0x21 }, // X
		{ 0x01, 0x02, 0x0c, 0x38, 0x04, 0x02 }, // Y
		{ 0x21, 0x31, 0x29, 0x25, 0x23, 0x21 }, // Z
		{ 0x3f, 0x21, 0x00, 0x00, 0x00, 0x00 }, // [
		{ 0x02, 0x04, 0x08, 0x10, 0x20, 0x00 }, // "\"
		{ 0x21, 0x3f, 0x00, 0x00, 0x00, 0x00 }, // ]
		{ 0x04, 0x02, 0x3f, 0x02, 0x04, 0x00 }, // ^
		{ 0x40, 0x40, 0x40, 0x40, 0x40, 0x40 }, // _
		{ 0x01, 0x02, 0x00, 0x00, 0x00, 0x00 }, // `
		{ 0x10, 0x30, 0x2a, 0x2a, 0x3c, 0x00 }, // a
		{ 0x3f, 0x24, 0x24, 0x24, 0x18, 0x00 }, // b
		{ 0x0c, 0x14, 0x22, 0x22, 0x00, 0x00 }, // c
		{ 0x18, 0x24, 0x24, 0x24, 0x3f, 0x00 }, // d
		{ 0x1c, 0x2c, 0x2a, 0x2a, 0x24, 0x00 }, // e
		{ 0x3e, 0x05, 0x01, 0x00, 0x00, 0x00 }, // f
		{ 0x18, 0x28, 0xa4, 0xa4, 0x7c, 0x00 }, // g
		{ 0x3f, 0x04, 0x04, 0x0c, 0x30, 0x00 }, // h
		{ 0x24, 0x3d, 0x20, 0x00, 0x00, 0x00 }, // i
		{ 0x20, 0x40, 0x40, 0x3d, 0x00, 0x00 }, // j
		{ 0x3f, 0x0c, 0x12, 0x20, 0x00, 0x00 }, // k
		{ 0x1f, 0x20, 0x20, 0x00, 0x00, 0x00 }, // l
		{ 0x3e, 0x02, 0x3c, 0x02, 0x3c, 0x00 }, // m
		{ 0x3e, 0x02, 0x02, 0x02, 0x3c, 0x00 }, // n
		{ 0x0c, 0x14, 0x22, 0x32, 0x0c, 0x00 }, // o
		{ 0xfc, 0x24, 0x24, 0x24, 0x18, 0x00 }, // p
		{ 0x18, 0x24, 0x24, 0x24, 0xfc, 0x80 }, // q
		{ 0x3c, 0x04, 0x02, 0x02, 0x00, 0x00 }, // r
		{ 0x24, 0x2c, 0x2a, 0x2a, 0x10, 0x00 }, // s
		{ 0x02, 0x1f, 0x22, 0x20, 0x00, 0x00 }, // t
		{ 0x1e, 0x20, 0x20, 0x20, 0x1e, 0x00 }, // u
		{ 0x06, 0x18, 0x20, 0x18, 0x06, 0x00 }, // v
		{ 0x1e, 0x30, 0x1c, 0x30, 0x0e, 0x00 }, // w
		{ 0x22, 0x14, 0x08, 0x14, 0x22, 0x00 }, // x
		{ 0x0c, 0x10, 0xa0, 0xa0, 0x7c, 0x00 }, // y
		{ 0x22, 0x32, 0x2a, 0x26, 0x22, 0x22 }, // z
		{ 0x0c, 0x3f, 0x21, 0x00, 0x00, 0x00 }, // {
		{ 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00 }, // |
		{ 0x21, 0x3f, 0x0c, 0x00, 0x00, 0x00 }, // }
		{ 0x02, 0x01, 0x02, 0x01, 0x00, 0x00 }, // ~
		{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } };

/*!
 * \brief The Vgascreen class
 *
 * The VGAscreen is a class that enables the VGA screen using the UB library.
 * The different methods of class are to draw different shapes on the VGA screen.
 *
 * can draw: lijn, rechthoek, ellips, driehoek, tekst and bitmaps.
 * (lines, rectangles, ellipse, triangle, text and bitmaps)
 *
 */
class Vgascreen
{
	private:
		int x_pos;
		int y_pos;

		/*!
		 * \brief Initiates the VGA screen.
		 *
		 * Calls the UB library init() function.
		 *
		 * \param void.
		 */
		int init_VGA(void);

		/*!
		 * \brief set current position.
		 * \param int x, x coordinate.
		 * \param int y, y coordinate.
		 */
		int VGA_pos(int x, int y);

	public:
		/*!
		 * \brief Create VGAscreen object.
		 * \param void.
		 */
		Vgascreen(void);

		/*!
		 * \brief Destroy the VGAscreen object.
		 * \param void.
		 */
		virtual ~Vgascreen(void);

		/** @brief Draw line on screen
		 *
		 * 	Draws a line between 2 points (x1,y1,x2,y2).
		 *
		 *  @param int x1, the first x coordinate of the line.
		 *  @param int y1, the first y coordinate of the line.
		 *  @param int x2, the second x coordinate of the line.
		 *  @param int y2, the second y coordinate of the line.
		 *  @param int witdh, the witdh of the line.
		 *  @param int color, 256-color value.
		 *  @return int error
		 */
		int draw_line(int x1, int y1, int x2, int y2, int width, int color);

		/** @brief Draw ellipse on screen
		 *
		 * Draws an ellipse on the screen using a middle point and the x and y radius
		 *
		 *  @param int x_mp, x coordinate of the middle point.
		 *  @param int y_mp, x coordinate of the middle point.
		 *  @param int x_rad, radius in the x direction.
		 *  @param int y_rad, radius in the y direction.
		 *  @param int color, 256-color value.
		 *  @param int fill, fill the ellipse.
		 *  @return int error
		 */
		int draw_ellipse(int x_mp, int y_mp, int x_rad, int y_rad, int color, int fill);

		/** @brief Draw rectangle on screen
		 *
		 * Draws a rectangle from the bottom left corner(x_lo,y_lo) to the top right corner (x_rb, y_rb).
		 *
		 *  @param int x_lo, bottom left x coordinate.
		 *  @param int y_lo, bottom left y coordinate.
		 *  @param int x_rb, top right x coordinate.
		 *  @param int y_rb, top right y coordinate.
		 *  @param int color, 256-color value.
		 *  @param int fill, fill the rectangle.
		 *  @return int error
		 */
		int draw_rectangle(int x_lo, int y_lo, int x_rb, int y_rb, int color, int fill);

		/** @brief Draw triangle on screen
		 *
		 *  Draws a triangle between 3 points ((x1,y1),(x2,y2),(x3,y3).
		 *
		 *  @param int x1, x coordinate of the first point.
		 *  @param int y1, y coordinate of the first point.
		 *  @param int x2, x coordinate of the second point.
		 *  @param int y2, y coordinate of the second point.
		 *  @param int x3, x coordinate of the third point.
		 *  @param int y3, y coordinate of the third point.
		 *  @param int color, 256-color value.
		 *  @param int fill, fill the rectangle.
		 *  @return int error
		 */
		int draw_triangle(int x1, int y1, int x2, int y2, int x3, int y3,
				int color, int fill);

		/** @brief Draw text on screen
		 *
		 * 	Draws the given text on the screen. there are 2 fonts ("1"/"2") and 3 styles ("norm","cursief","vet").
		 *
		 *  @param int x, x coordiante bottom left of the text.
		 *  @param int y, y coordiante bottom left of the text.
		 *  @param const char *str, Text to be displayed.
		 *  @param int color, text color (256-color value).
		 *  @param int style, style of the text ("norm","cursief","vet").
		 *  @param int fontNr, select differtn fonts ("1"/"2").
		 *  @return int error
		 */
		int draw_text(int x, int y, const char *str, int color,
				const char* style, int fontNr);

		/** @brief Draw bitmap on screen
		 *
		 * 	Draws a bitmap from the bootem left coordinate.
		 * 	bitmaps: 0=smileface, 1=sadface, 2=arrow up, 3=arrow down.
		 *
		 *  @param int nr, number of the bitmap to be displayed (0=smileface, 1=sadface, 2=arrow up, 3=arrow down).
		 *  @param int x_lo, bottom left x coordinate.
		 *  @param int y_lo, bottom left y coordinate.
		 *  @return int error
		 */
		int draw_bitmap(int nr, int x_lo, int y_lo);

		/** @brief Fill screen with specified color
		 *
		 * 	Clear the screen in a specific color.
		 *
		 *  @param int color, 256-color value.
		 *  @return int error
		 */
		int clear_screen(int color);

};

#endif /* VGASCREEN_H_ */
